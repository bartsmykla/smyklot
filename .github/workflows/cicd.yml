on: [push]

name: CI/CD

jobs:
  login_to_registry:
    name: "Login to Container Registry"
    runs-on: ubuntu-latest
    steps:
    - name: "Login to GitHub Packages Docker Registry"
      uses: docker/login-action@v1
      with:
        registry: docker.pkg.github.com
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

  bump_version:
    needs: login_to_registry
    name: "Bump Version and create Tag"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - name: "Install cargo-bump"
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-bump
      - name: "Bump Cargo version and create a git tag"
        uses: actions-rs/cargo@v1
        with:
          command: bump
          args: patch
      - name: "Regenerate Cargo.lock file"
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: "Save version to output"
        id: vars
        run: echo ::set-output name=version::$(cargo read-manifest | jq '.version')
      - name: "Commit bumped version"
        uses: EndBug/add-and-commit@v7.0.0
        with:
          author_name: github-actions
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: "Bump version to: ${{ steps.vars.outputs.version }} "
          add: "Cargo.toml Cargo.lock"
          tag: "${{ steps.vars.outputs.version }}"

  build_image:
    needs: bump_version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: "Set up QEMU"
      uses: docker/setup-qemu-action@v1
    - name: "Set up Docker Buildx"
      uses: docker/setup-buildx-action@v1
    - name: "Docker meta"
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: |
          bartsmykla/smyklot
          ghcr.io/bartsmykla/smyklot
        tag-sha: true
    - name: "Build and push"
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
    - name: "Image digest"
      run: echo ${{ steps.docker_build.outputs.digest }}
