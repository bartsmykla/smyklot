on:
  push:
    branches:
    - main
    paths:
    - src/**
    - deploy/**

name: CI/CD

jobs:
  build_image:
    name: "Build and push container image"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git
          ~/.cargo/bin/cargo-bump
          ~/.cargo/.crates.toml
          ~/.cargo/.crates2.json
          ~/.cargo/.package-cache
          ~/.cargo/env
          ./target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: "Login to GitHub Container Registry"
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: "Docker Layer Cache"
      uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true
    - name: "Set up QEMU"
      uses: docker/setup-qemu-action@v1
    - name: "Set up Docker Buildx"
      uses: docker/setup-buildx-action@v1
    - name: "Install cargo-bump"
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-bump
    - name: "Bump Cargo version and create a git tag"
      uses: actions-rs/cargo@v1
      with:
        command: bump
        args: patch
    - name: "Regenerate Cargo.lock file"
      uses: actions-rs/cargo@v1
      with:
        command: generate-lockfile
    - name: "Prepare variables"
      id: vars
      run: |
        VERSION="$(cargo read-manifest | jq -r '.version')"

        TAGS="ghcr.io/${{ github.repository }}:${VERSION}"
        if [[ $GITHUB_REF == ref/head/master ]]; then
          TAGS="$TAGS,ghcr.io/${{ github.repository }}:latest"
        fi

        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=version::${VERSION}
    - name: "Build and push"
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        file: ./Dockerfile
        tags: ${{ steps.vars.outputs.tags }}
    - name: "Image digest"
      run: echo ${{ steps.docker_build.outputs.digest }}
    - name: "Commit bumped version"
      if: success()
      uses: EndBug/add-and-commit@v7.0.0
      with:
        author_name: github-actions
        author_email: 41898282+github-actions[bot]@users.noreply.github.com
        message: "Bump version to: ${{ steps.vars.outputs.version }} "
        add: "Cargo.toml Cargo.lock"
        tag: "${{ steps.vars.outputs.version }}"
        
  deploy:
    name: "Deploy image to Digital Ocean K8s cluster"
    needs: build_image
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - name: "Install doctl"
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: "Update deployment file"
      run: |
        TAG=${{ needs.build_image.outputs.version }}
        
        sed -i 's|ghcr.io/bartsmykla/smyklot:latest|ghcr.io/bartsmykla/smyklot:'${TAG}'|' $GITHUB_WORKSPACE/deploy/k8s/deployment.yml
        sed -i 's|"{{version}}"|'${TAG}'|' $GITHUB_WORKSPACE/deploy/k8s/deployment.yml

    - name: "Save DigitalOcean kubeconfig with short-lived credentials"
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 smyklot

    - name: "Deploy to DigitalOcean Kubernetes"
      run: kubectl apply -n smyklot -f $GITHUB_WORKSPACE/deploy/k8s/deployment.yml

    - name: "Verify deployment"
      run: kubectl rollout status -n smyklot deployment/smyklot
